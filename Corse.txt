using System;

namespace Laba_1._1
{
    using System;

    namespace Lab1n1
    {
        class Program
        {
            class vector
            {
                private double[] cord;
                public vector()
                {
                    cord = new double[18];
                }
                ~vector() { }
                public void Setcord(double value, int i)
                {
                    cord[i] = value;
                }
                public double Getcord(int i)
                {
                    return (cord[i]);
                }
                public double LNorm()
                {
                    double sum;
                    sum = 0;
                    for (int i = 0; i < 18; i++)
                        sum += (Getcord(i) < 0) ? (-1) * Getcord(i) : Getcord(i);
                    return (sum);
                }
                public double evclid()
                {
                    double sum2 = 0;
                    for (int i = 0; i < 18; i++)
                        sum2 += Getcord(i) * Getcord(i);
                    return (Math.Abs(sum2));

                }
                public double MaxN()
                {
                    double max = Math.Abs(Getcord(0));
                    for (int i = 0; i < 18; i++)
                        max = (Math.Abs(Getcord(i)) > max) ? Math.Abs(Getcord(i)) : max;
                    return (max);
                }
            }

            static void writeNorms(vector vector)
            {
                Console.Write($"\nL - норма вектора x - {vector.LNorm(),-10}");
                Console.Write($"\n - Евклидова норма вектора x - {vector.evclid(),-10}");
                Console.Write($"\n - Max норма вектора x - {vector.MaxN(),-10}");
                Console.Write($"\n Gвторить ввод данных?");

            }
            static void initx(vector vector)
            {
                double cords;
                bool eror;

                Console.Write("введите координаты вектора х 18-мерного пространства:");
                for (int i = 0; i < 18; i++)
                {
                    do
                    {
                        eror = false;
                        try
                        {
                            Console.Write($"\t\nx({(i + 1)}):");
                            cords = Convert.ToDouble(Console.ReadLine());
                            vector.Setcord(cords, i);
                        }
                        catch (Exception e)
                        {
                            Console.WriteLine(e.Message + "Попробуйте занов\n");
                            eror = true;
                        }
                    } while (eror);

                }
            }

            static void Main()
            {
                vector vector = new vector();
                string sign;
                do
                {
                    initx(vector);
                    writeNorms(vector);
                    sign = Console.ReadLine();
                } while (sign == "y" || sign == "y");
                Console.Write("Для завершеня нажмите любую клавишу...");
                Console.ReadKey();


            }


        }
    }

}
